#eval /* */ or eval(/* */
eval\s*+\(?\s*+\/\*.*\*\/

#
eval\([a-z0-9]{4,}\(\$[a-z0-9]{4,}, \$[0-9a-z]{4,}\)\);

#
(chr\(\d+\^\d+\)\.){4,}

#
(\$[a-z0-9]{3,}\[\d+\]\.){4,}

#
chr\(\d+\)\.""\.""\.""\.""\.""

#
\$GLOBALS\[\$GLOBALS['[a-z0-9]{4,}'\]\[\d+\]\.\$GLOBALS\['[a-z-0-9]{4,}'\]\[\d+\].

#
\$GLOBALS\['[a-z0-9]{5,}'\] = \$[a-z]+\d+\[\d+\]\.\$[a-z]+\d+\[\d+\]\.\$[a-z]+\d+\[\d+\]\.\$[a-z]+\d+\[\d+\]\.

#
eval\([a-z0-9_]+\(base64_decode\(

#
\$[a-z]{3,}=\$[a-z]{3,}\("",\$[a-z]{3,}\);\$[a-z]{3,}\(\);

#
{\s*eval\s*\(\s*\$

#
Googlebot['"]{0,1}\s*\)\){echo\s+file_get_contents

# execute base64 code
eVaL\(\s*trim\(\s*baSe64_deCoDe\(

#
if\s*\(\s*mail\s*\(\s*\$mails\[\$i\]\s*,\s*\$tema\s*,\s*base64_encode\s*\(\s*\$text

# Write HTTP Request to File
fwrite\s*\(\s*\$fh\s*,\s*stripslashes\s*\(\s*@*\$_(GET|POST|SERVER|COOKIE|REQUEST)\[

# Download Remote Code
echo\s+file_get_contents\s*\(\s*base64_url_decode\s*\(\s*@*\$_(GET|POST|SERVER|COOKIE|REQUEST)

# 'eval' in ascii chr() chars
chr\s*\(\s*101\s*\)\s*\.\s*chr\s*\(\s*118\s*\)\s*\.\s*chr\s*\(\s*97\s*\)\s*\.\s*chr\s*\(\s*108\s*\)

#
(\$OOO_O_000_\{\d+\}.){3,}

#Detects the '_' character encoded in a string like "\x5F".  '_' is present in many functions that malware would want to hide.
# '_' as "\x5f"
\\x5f

#Detects the '_' character placed inside a call to the 'chr()' function
# '_' as 'chr(95)' or 'chr(0x5f)'
chr\s*\(\s*['"]?\s*((95)|(0x5f))\s*['"]?\s*\)

# FilesMan Backdoor
["']f['"\s.]*+i['"\s.]*+l['"\s.]*+e['"\s.]*+s['"\s.]*+m['"\s.]*+a['"\s.]*+n['"]

# Obuscated require
require[^;]*?\\x[0-9a-f]{2}

# Obfuscated include
include[^;]*?\\x[0-9a-f]{2}

# Spam script
\bmail\s*\(\s*\$_((GET)|(POST))\[
